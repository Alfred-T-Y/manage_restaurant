import 'package:flutter/material.dart';
import 'package:font_awesome_flutter/font_awesome_flutter.dart';
import 'package:get/route_manager.dart';
import 'package:lottie/lottie.dart';
import 'package:manage_restaurant/components/my_button.dart';
import 'package:manage_restaurant/components/my_dropdownbuttonformfield.dart';
import 'package:manage_restaurant/components/my_textfield.dart';
import 'package:manage_restaurant/routes/app_pages.dart';

class WorkerRegisterPage extends StatefulWidget {

  final void Function ()? onTap;
  const WorkerRegisterPage({super.key, required this.onTap});

  @override
  State<WorkerRegisterPage> createState() => _WorkerRegisterPageState();
}

class _WorkerRegisterPageState extends State<WorkerRegisterPage> {

  final emailController = TextEditingController();
  final nameController = TextEditingController();
  final idController = TextEditingController();
  final idFocus = FocusNode();
  final passwordController = TextEditingController();
  final confirmPassWordController = TextEditingController();
  final emailFocus = FocusNode();
  final nameFocus = FocusNode();
  final passWordFocus = FocusNode();
  final confirmPassWordFocus = FocusNode();
  final focussubmission = FocusNode();
  final formkey = GlobalKey<FormState>();
  List<String> choices = ["Waiter","Kitchen manager","Deliver","Manager"];
  String? choice;
  String? animationPath;
  Color pagecolor = const Color.fromARGB(255, 15, 224, 123);
  String? code = "+237";
  final phonenumberController = TextEditingController();
  final phonenumberFocus = FocusNode();


  void submission(){
    if(focussubmission.hasFocus){
      focussubmission.unfocus();
      signup();
    }
  }

    @override
  void initState() {
    super.initState();
    // Ã‰couter les changements de focussubmission
    focussubmission.addListener(submission);
  }

  //signup method
  void signup(){
    //authentification

    //home page
    if(formkey.currentState!.validate() /*&& choice != null*/){
      Get.offAllNamed(Routes.workerHomePage);
    }
  }

  @override
  Widget build(BuildContext context) {
    void onChanged(String? role){
      setState(() {
        choice = role;
        switch(role){
          case "Waiter":
            animationPath = "assets/server.json";
            pagecolor = const Color.fromARGB(255, 15, 224, 123);
            break;
          case "Kitchen manager":
            animationPath = "assets/kitchen_manager.json";
            pagecolor = const Color.fromARGB(255, 8, 202, 14);
            break;
          case "Deliver":
            animationPath = "assets/deliver.json";
            pagecolor = const Color.fromARGB(255, 25, 1, 112);
            break;
          case "Manager":
            animationPath = "assets/manager.json";
            pagecolor = const Color.fromARGB(255, 146, 144, 23);
            break;
          default:
            animationPath = "assets/server.json";
            pagecolor = const Color.fromARGB(255, 15, 224, 123);
        }
      });
    }

    return Scaffold(
      appBar: AppBar(
        title:Row(
          children: [
            Spacer(),
            IconButton(
              icon: FaIcon(FontAwesomeIcons.userShield),
              color: Theme.of(context).colorScheme.inversePrimary,
              onPressed: () {
                Get.back();
              },
            ),
          ],
        ),
      ),
      backgroundColor: Theme.of(context).colorScheme.surface,
      body: SafeArea(
        child: SingleChildScrollView(
          child: Form(
            key: formkey,
            child: Column(
              mainAxisAlignment: MainAxisAlignment.center,
              children: [
                //logo
                Lottie.asset(
                  animationPath ?? "assets/server.json",
                  width: 200,
                  height: 200,
                  fit: BoxFit.contain,
                ),
                const SizedBox(height: 25),
            
                //app slogan
                Text(
                  "Start working",
                  style: TextStyle(
                    fontWeight: FontWeight.bold,
                    fontStyle: FontStyle.italic,
                    fontSize: 16,
                    color: Theme.of(context).colorScheme.inversePrimary,
                  ),
                ),
                    
                const SizedBox(height: 25),
                
                //emailtextfield
                MyTextfield(
                  hintText: "Email", 
                  obscureText: false, 
                  controller: emailController,
                  focusNode: emailFocus,
                  focusnext: nameFocus,
                  champ: "your email",
                  bordercolor: pagecolor,
                  ),
                SizedBox(height: 10,),
            
                //name
                MyTextfield(
                  hintText: "Name and Firstname", 
                  obscureText: false, 
                  controller: nameController,
                  focusNode: nameFocus,
                  focusnext: phonenumberFocus,
                  champ: "your name and firstname",
                  bordercolor: pagecolor,
                  ),
                SizedBox(height: 10,),
        
                //phone number
                Row(
                  children: [
                    SizedBox(width: 25,),
                    SizedBox(
                      width: 130,
                      child: MyDropdownbuttonformfield(
                        choices: countryPhoneCodes, 
                        valueStart: 'ðŸ‡¨ðŸ‡² +237',
                        radius: 0,
                        padding: 0,
                        onChanged: (value)=> setState(() {
                          code = value;
                        }),),
                    ),
                
                    SizedBox(width: 10,),
                
                    Expanded(
                      child: MyTextfield(
                        hintText: "Phonenumber", 
                        obscureText: false, 
                        controller: phonenumberController,
                        focusNode: phonenumberFocus,
                        focusnext: idFocus,
                        bordercolor: pagecolor,
                        padding: 0,
                      ),
                    ),
                    SizedBox(width: 25,)
                  ],
                ),
                SizedBox(height: 10,),
                    
                //RoleDropdownbutton 
                MyDropdownbuttonformfield(
                  hintText: "Role", 
                  champ: "Role",
                  choices: choices,
                  onChanged: onChanged,
                  ),
                SizedBox(height: 10,),
            
                //employer's id
                Row(
                  children: [
                    SizedBox(width: 25,),
                    Expanded(
                      child: MyTextfield(
                        hintText: "Employer's ID", 
                        obscureText: false, 
                        controller: idController,
                        focusNode: idFocus,
                        focusnext: passWordFocus,
                        champ: "your employer's id",
                        bordercolor: pagecolor,
                        padding: 0,
                      ),
                    ),
                    SizedBox(width: 5,),
                    GestureDetector(
                      child: Icon(
                        FontAwesomeIcons.qrcode,
                        color: Theme.of(context).colorScheme.primary,
                        size: 42,
                        ),
                      onTap: () async {
                          var result = await Get.toNamed(
                            '/ScanQrCodePage',
                            arguments: pagecolor,
                          );
                          if (result != null) {
                            setState(() {
                              idController.text = result.toString();
                            });
                          }
                        },
                    ),
                    SizedBox(width: 25,)
                  ],
                ),
                SizedBox(height: 10,),
                    
                //password textfield
                MyTextfield(
                  hintText: "Password", 
                  obscureText: true, 
                  controller: passwordController,
                  focusNode: passWordFocus,
                  focusnext: confirmPassWordFocus,
                  champ: "your password",
                  bordercolor: pagecolor,
                  ),
                SizedBox(height: 10,),
                    
                //confirm password textfield
                MyTextfield(
                  hintText: "Confirm the password", 
                  obscureText: true, 
                  controller: confirmPassWordController,
                  focusNode: confirmPassWordFocus,
                  focusnext: focussubmission,
                  champ: "your password again",
                  bordercolor: pagecolor,
                  ),
                SizedBox(height: 10,),
                    
                //sign up button
                MyButton(
                  onTap: signup,
                  text: "Sign up",
                  color: pagecolor,
                  ),
                SizedBox(height: 20,),
                    
                //Log in
                Row(
                  mainAxisAlignment: MainAxisAlignment.center,
                  children: [
                    Text("Already have a account?",
                      style: TextStyle(
                        color: Theme.of(context).colorScheme.primary,
                      ),
                    ),
                    SizedBox(width: 5,),
                    GestureDetector(
                      onTap: widget.onTap,
                      child: Text("Log in",
                        style: TextStyle(
                          color: Theme.of(context).colorScheme.inversePrimary,
                          fontWeight: FontWeight.bold,
                        ),
                      ),
                    ),
                  ],
                ),
                SizedBox(height: 10,),
              ],
            ),
          ),
        ),
      ),
    );}

  }
  final List<String> countryPhoneCodes = [
    'ðŸ‡¦ðŸ‡« +93', // Afghanistan
    'ðŸ‡¦ðŸ‡± +355', // Albania
    'ðŸ‡©ðŸ‡¿ +213', // Algeria
    'ðŸ‡¦ðŸ‡¸ +1-684', // American Samoa
    'ðŸ‡¦ðŸ‡© +376', // Andorra
    'ðŸ‡¦ðŸ‡´ +244', // Angola
    'ðŸ‡¦ðŸ‡® +1-264', // Anguilla
    'ðŸ‡¦ðŸ‡¶ +672', // Antarctica
    'ðŸ‡¦ðŸ‡¬ +1-268', // Antigua and Barbuda
    'ðŸ‡¦ðŸ‡· +54', // Argentina
    'ðŸ‡¦ðŸ‡² +374', // Armenia
    'ðŸ‡¦ðŸ‡¼ +297', // Aruba
    'ðŸ‡¦ðŸ‡º +61', // Australia
    'ðŸ‡¦ðŸ‡¹ +43', // Austria
    'ðŸ‡¦ðŸ‡¿ +994', // Azerbaijan
    'ðŸ‡§ðŸ‡¸ +1-242', // Bahamas
    'ðŸ‡§ðŸ‡­ +973', // Bahrain
    'ðŸ‡§ðŸ‡© +880', // Bangladesh
    'ðŸ‡§ðŸ‡§ +1-246', // Barbados
    'ðŸ‡§ðŸ‡¾ +375', // Belarus
    'ðŸ‡§ðŸ‡ª +32', // Belgium
    'ðŸ‡§ðŸ‡¿ +501', // Belize
    'ðŸ‡§ðŸ‡¯ +229', // Benin
    'ðŸ‡§ðŸ‡² +1-441', // Bermuda
    'ðŸ‡§ðŸ‡¹ +975', // Bhutan
    'ðŸ‡§ðŸ‡´ +591', // Bolivia
    'ðŸ‡§ðŸ‡¦ +387', // Bosnia and Herzegovina
    'ðŸ‡§ðŸ‡¼ +267', // Botswana
    'ðŸ‡§ðŸ‡· +55', // Brazil
    'ðŸ‡®ðŸ‡´ +246', // British Indian Ocean Territory
    'ðŸ‡»ðŸ‡¬ +1-284', // British Virgin Islands
    'ðŸ‡§ðŸ‡³ +673', // Brunei
    'ðŸ‡§ðŸ‡¬ +359', // Bulgaria
    'ðŸ‡§ðŸ‡« +226', // Burkina Faso
    'ðŸ‡§ðŸ‡® +257', // Burundi
    'ðŸ‡°ðŸ‡­ +855', // Cambodia
    'ðŸ‡¨ðŸ‡² +237', // Cameroon
    'ðŸ‡¨ðŸ‡¦ +1', // Canada
    'ðŸ‡¨ðŸ‡» +238', // Cape Verde
    'ðŸ‡°ðŸ‡¾ +1-345', // Cayman Islands
    'ðŸ‡¨ðŸ‡« +236', // Central African Republic
    'ðŸ‡¹ðŸ‡© +235', // Chad
    'ðŸ‡¨ðŸ‡± +56', // Chile
    'ðŸ‡¨ðŸ‡³ +86', // China
    'ðŸ‡¨ðŸ‡´ +57', // Colombia
    'ðŸ‡°ðŸ‡² +269', // Comoros
    'ðŸ‡¨ðŸ‡¬ +242', // Congo (Brazzaville)
    'ðŸ‡¨ðŸ‡© +243', // Congo (Kinshasa)
    'ðŸ‡¨ðŸ‡° +682', // Cook Islands
    'ðŸ‡¨ðŸ‡· +506', // Costa Rica
    'ðŸ‡­ðŸ‡· +385', // Croatia
    'ðŸ‡¨ðŸ‡º +53', // Cuba
    'ðŸ‡¨ðŸ‡¾ +357', // Cyprus
    'ðŸ‡¨ðŸ‡¿ +420', // Czech Republic
    'ðŸ‡©ðŸ‡° +45', // Denmark
    'ðŸ‡©ðŸ‡¯ +253', // Djibouti
    'ðŸ‡©ðŸ‡² +1-767', // Dominica
    'ðŸ‡©ðŸ‡´ +1-809', // Dominican Republic
    'ðŸ‡ªðŸ‡¨ +593', // Ecuador
    'ðŸ‡ªðŸ‡¬ +20', // Egypt
    'ðŸ‡¸ðŸ‡» +503', // El Salvador
    'ðŸ‡¬ðŸ‡¶ +240', // Equatorial Guinea
    'ðŸ‡ªðŸ‡· +291', // Eritrea
    'ðŸ‡ªðŸ‡ª +372', // Estonia
    'ðŸ‡¸ðŸ‡¿ +268', // Eswatini
    'ðŸ‡ªðŸ‡¹ +251', // Ethiopia
    'ðŸ‡«ðŸ‡¯ +679', // Fiji
    'ðŸ‡«ðŸ‡® +358', // Finland
    'ðŸ‡«ðŸ‡· +33', // France
    'ðŸ‡¬ðŸ‡¦ +241', // Gabon
    'ðŸ‡¬ðŸ‡² +220', // Gambia
    'ðŸ‡¬ðŸ‡ª +995', // Georgia
    'ðŸ‡©ðŸ‡ª +49', // Germany
    'ðŸ‡¬ðŸ‡­ +233', // Ghana
    'ðŸ‡¬ðŸ‡· +30', // Greece
    'ðŸ‡¬ðŸ‡± +299', // Greenland
    'ðŸ‡¬ðŸ‡© +1-473', // Grenada
    'ðŸ‡¬ðŸ‡º +1-671', // Guam
    'ðŸ‡¬ðŸ‡¹ +502', // Guatemala
    'ðŸ‡¬ðŸ‡³ +224', // Guinea
    'ðŸ‡¬ðŸ‡¼ +245', // Guinea-Bissau
    'ðŸ‡¬ðŸ‡¾ +592', // Guyana
    'ðŸ‡­ðŸ‡¹ +509', // Haiti
    'ðŸ‡­ðŸ‡³ +504', // Honduras
    'ðŸ‡­ðŸ‡° +852', // Hong Kong
    'ðŸ‡­ðŸ‡º +36', // Hungary
    'ðŸ‡®ðŸ‡¸ +354', // Iceland
    'ðŸ‡®ðŸ‡³ +91', // India
    'ðŸ‡®ðŸ‡© +62', // Indonesia
    'ðŸ‡®ðŸ‡· +98', // Iran
    'ðŸ‡®ðŸ‡¶ +964', // Iraq
    'ðŸ‡®ðŸ‡ª +353', // Ireland
    'ðŸ‡®ðŸ‡± +972', // Israel
    'ðŸ‡®ðŸ‡¹ +39', // Italy
    'ðŸ‡¨ðŸ‡® +225', // Ivory Coast
    'ðŸ‡¯ðŸ‡² +1-876', // Jamaica
    'ðŸ‡¯ðŸ‡µ +81', // Japan
    'ðŸ‡¯ðŸ‡´ +962', // Jordan
    'ðŸ‡°ðŸ‡¿ +7', // Kazakhstan
    'ðŸ‡°ðŸ‡ª +254', // Kenya
    'ðŸ‡°ðŸ‡® +686', // Kiribati
    'ðŸ‡½ðŸ‡° +383', // Kosovo
    'ðŸ‡°ðŸ‡¼ +965', // Kuwait
    'ðŸ‡°ðŸ‡¬ +996', // Kyrgyzstan
    'ðŸ‡±ðŸ‡¦ +856', // Laos
    'ðŸ‡±ðŸ‡» +371', // Latvia
    'ðŸ‡±ðŸ‡§ +961', // Lebanon
    'ðŸ‡±ðŸ‡¸ +266', // Lesotho
    'ðŸ‡±ðŸ‡· +231', // Liberia
    'ðŸ‡±ðŸ‡¾ +218', // Libya
    'ðŸ‡±ðŸ‡® +423', // Liechtenstein
    'ðŸ‡±ðŸ‡¹ +370', // Lithuania
    'ðŸ‡±ðŸ‡º +352', // Luxembourg
    'ðŸ‡²ðŸ‡´ +853', // Macao
    'ðŸ‡²ðŸ‡° +389', // North Macedonia
    'ðŸ‡²ðŸ‡¬ +261', // Madagascar
    'ðŸ‡²ðŸ‡¼ +265', // Malawi
    'ðŸ‡²ðŸ‡¾ +60', // Malaysia
    'ðŸ‡²ðŸ‡» +960', // Maldives
    'ðŸ‡²ðŸ‡± +223', // Mali
    'ðŸ‡²ðŸ‡¹ +356', // Malta
    'ðŸ‡²ðŸ‡­ +692', // Marshall Islands
    'ðŸ‡²ðŸ‡· +222', // Mauritania
    'ðŸ‡²ðŸ‡º +230', // Mauritius
    'ðŸ‡²ðŸ‡½ +52', // Mexico
    'ðŸ‡«ðŸ‡² +691', // Micronesia
    'ðŸ‡²ðŸ‡© +373', // Moldova
    'ðŸ‡²ðŸ‡¨ +377', // Monaco
    'ðŸ‡²ðŸ‡³ +976', // Mongolia
    'ðŸ‡²ðŸ‡ª +382', // Montenegro
    'ðŸ‡²ðŸ‡¸ +1-664', // Montserrat
    'ðŸ‡²ðŸ‡¦ +212', // Morocco
    'ðŸ‡²ðŸ‡¿ +258', // Mozambique
    'ðŸ‡²ðŸ‡² +95', // Myanmar
    'ðŸ‡³ðŸ‡¦ +264', // Namibia
    'ðŸ‡³ðŸ‡· +674', // Nauru
    'ðŸ‡³ðŸ‡µ +977', // Nepal
    'ðŸ‡³ðŸ‡± +31', // Netherlands
    'ðŸ‡³ðŸ‡¿ +64', // New Zealand
    'ðŸ‡³ðŸ‡® +505', // Nicaragua
    'ðŸ‡³ðŸ‡ª +227', // Niger
    'ðŸ‡³ðŸ‡¬ +234', // Nigeria
    'ðŸ‡°ðŸ‡µ +850', // North Korea
    'ðŸ‡²ðŸ‡µ +1-670', // Northern Mariana Islands
    'ðŸ‡³ðŸ‡´ +47', // Norway
    'ðŸ‡´ðŸ‡² +968', // Oman
    'ðŸ‡µðŸ‡° +92', // Pakistan
    'ðŸ‡µðŸ‡¼ +680', // Palau
    'ðŸ‡µðŸ‡¸ +970', // Palestine
    'ðŸ‡µðŸ‡¦ +507', // Panama
    'ðŸ‡µðŸ‡¬ +675', // Papua New Guinea
    'ðŸ‡µðŸ‡¾ +595', // Paraguay
    'ðŸ‡µðŸ‡ª +51', // Peru
    'ðŸ‡µðŸ‡­ +63', // Philippines
    'ðŸ‡µðŸ‡± +48', // Poland
    'ðŸ‡µðŸ‡¹ +351', // Portugal
    'ðŸ‡¶ðŸ‡¦ +974', // Qatar
    'ðŸ‡·ðŸ‡´ +40', // Romania
    'ðŸ‡·ðŸ‡º +7', // Russia
    'ðŸ‡·ðŸ‡¼ +250', // Rwanda
    'ðŸ‡°ðŸ‡³ +1-869', // Saint Kitts and Nevis
    'ðŸ‡±ðŸ‡¨ +1-758', // Saint Lucia
    'ðŸ‡»ðŸ‡¨ +1-784', // Saint Vincent and the Grenadines
    'ðŸ‡¼ðŸ‡¸ +685', // Samoa
    'ðŸ‡¸ðŸ‡² +378', // San Marino
    'ðŸ‡¸ðŸ‡¹ +239', // Sao Tome and Principe
    'ðŸ‡¸ðŸ‡¦ +966', // Saudi Arabia
    'ðŸ‡¸ðŸ‡³ +221', // Senegal
    'ðŸ‡·ðŸ‡¸ +381', // Serbia
    'ðŸ‡¸ðŸ‡¨ +248', // Seychelles
    'ðŸ‡¸ðŸ‡± +232', // Sierra Leone
    'ðŸ‡¸ðŸ‡¬ +65', // Singapore
    'ðŸ‡¸ðŸ‡° +421', // Slovakia
    'ðŸ‡¸ðŸ‡® +386', // Slovenia
    'ðŸ‡¸ðŸ‡§ +677', // Solomon Islands
    'ðŸ‡¸ðŸ‡´ +252', // Somalia
    'ðŸ‡¿ðŸ‡¦ +27', // South Africa
    'ðŸ‡°ðŸ‡· +82', // South Korea
    'ðŸ‡¸ðŸ‡¸ +211', // South Sudan
    'ðŸ‡ªðŸ‡¸ +34', // Spain
    'ðŸ‡±ðŸ‡° +94', // Sri Lanka
    'ðŸ‡¸ðŸ‡© +249', // Sudan
    'ðŸ‡¸ðŸ‡· +597', // Suriname
    'ðŸ‡¸ðŸ‡ª +46', // Sweden
    'ðŸ‡¨ðŸ‡­ +41', // Switzerland
    'ðŸ‡¸ðŸ‡¾ +963', // Syria
    'ðŸ‡¹ðŸ‡¼ +886', // Taiwan
    'ðŸ‡¹ðŸ‡¯ +992', // Tajikistan
    'ðŸ‡¹ðŸ‡¿ +255', // Tanzania
    'ðŸ‡¹ðŸ‡­ +66', // Thailand
    'ðŸ‡¹ðŸ‡¬ +228', // Togo
    'ðŸ‡¹ðŸ‡´ +676', // Tonga
    'ðŸ‡¹ðŸ‡¹ +1-868', // Trinidad and Tobago
    'ðŸ‡¹ðŸ‡³ +216', // Tunisia
    'ðŸ‡¹ðŸ‡· +90', // Turkey
    'ðŸ‡¹ðŸ‡² +993', // Turkmenistan
    'ðŸ‡¹ðŸ‡» +688', // Tuvalu
    'ðŸ‡ºðŸ‡¬ +256', // Uganda
    'ðŸ‡ºðŸ‡¦ +380', // Ukraine
    'ðŸ‡¦ðŸ‡ª +971', // United Arab Emirates
    'ðŸ‡¬ðŸ‡§ +44', // United Kingdom
    'ðŸ‡ºðŸ‡¸ +1', // United States
    'ðŸ‡ºðŸ‡¾ +598', // Uruguay
    'ðŸ‡ºðŸ‡¿ +998', // Uzbekistan
    'ðŸ‡»ðŸ‡º +678', // Vanuatu
    'ðŸ‡»ðŸ‡ª +58', // Venezuela
    'ðŸ‡»ðŸ‡³ +84', // Vietnam
    'ðŸ‡¾ðŸ‡ª +967', // Yemen
    'ðŸ‡¿ðŸ‡² +260', // Zambia
    'ðŸ‡¿ðŸ‡¼ +263', // Zimbabwe
  ];
